{"version":3,"sources":["Components/Login/Register.js","Components/Login/LoginPage.js","Components/Header/UserEditor.js","Components/Header/Header.js","Components/Main/Main.js","Components/Loading/Loading.js","Components/Main/MainPage.js","Components/App.js","serviceWorker.js","index.js"],"names":["Register","state","user_nm","user_id","user_pw","alert","changeHandel","e","setState","target","name","value","Dialog","open","fullWidth","DialogTitle","method","onSubmit","a","preventDefault","console","log","form","FormData","append","axios","post","data","isPossibleId","Alert","severity","AlertTitle","isJoin","props","onSuccessRegister","error","className","style","position","paddingLeft","TextField","autoFocus","label","onChange","this","type","right","top","width","height","Button","onClick","aa","bb","cc","cc1","cc2","DialogActions","onClickCancel","color","React","Component","Login","isRegister","successRegister","failedLogin","loginHandel","Form","isLogin","marginTop","onChangePage","MyButton","styled","backgroundColor","marginRight","registerPage","id","action","href","alt","src","UserEditor","userImage","userName","userId","disabled","defaultValue","required","EditorButton","onCancel","fontSize","Header","setGroupMenuOpen","menuComponents","groupOpen","setFriendMenuOpen","friendOpen","menuClick","editorClick","userComponents","groupList","gruopCode","groupImage","groupName","friendList","friendCode","friendImage","friendName","GroupList","gruops","map","key","GroupButton","friends","classes","IconButton","Drawer","onClose","anchor","InputBase","placeholder","minWidth","border","Main","Loading","App","userCode","isLoading","get","currPage","page","MainPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0ZAwGeA,E,2MA7FXC,MAAQ,CACJC,QAAU,GACVC,QAAS,GACTC,QAAS,GACTC,MAAQ,c,EAEZC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,wEAIxB,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,WAAS,GAClB,kBAACC,EAAA,EAAD,iCACA,0BAAMC,OAAO,OAAOC,SAAQ,uCAAE,WAAOV,GAAP,mBAAAW,EAAA,6DAC1BX,EAAEY,iBACFC,QAAQC,IAAI,EAAKpB,OAFS,UAIhBqB,EAAO,IAAIC,UACZC,OAAO,UAAW,EAAKvB,MAAMC,SAClCoB,EAAKE,OAAO,UAAW,EAAKvB,MAAME,SAClCmB,EAAKE,OAAO,UAAW,EAAKvB,MAAMG,SAPZ,SAQCqB,IAAMC,KAAK,oCAAqCJ,GARjD,oBASG,KADjBK,EARc,EAQdA,MACAC,aATc,wBAUlB,EAAKpB,SAAS,CAACH,MAAQ,WACnB,OAAQ,kBAACwB,EAAA,EAAD,CAAOC,SAAS,SACxB,kBAACC,EAAA,EAAD,cADQ,kFAXM,+BAkBH,IAAhBJ,EAAKK,OAlBc,wBAmBlB,EAAKxB,SAAS,CAACH,MAAQ,WACnB,OAAQ,kBAACwB,EAAA,EAAD,CAAOC,SAAS,SACxB,kBAACC,EAAA,EAAD,cADQ,iJApBM,2BA4BtB,EAAKE,MAAMC,oBA5BW,kDA8BtBd,QAAQe,MAAR,MA9BsB,0DAAF,uDAiCxB,yBAAKC,UAAU,gBAAgBC,MAAO,CAACC,SAAS,WAAYC,YAAY,UACpE,kBAACC,EAAA,EAAD,CACI9B,KAAK,UACL+B,WAAS,EACTC,MAAM,eACNC,SAAUC,KAAKtC,eAAgB,6BACnC,kBAACkC,EAAA,EAAD,CACI9B,KAAK,UACLgC,MAAM,qBACNC,SAAUC,KAAKtC,eAAgB,6BACnC,kBAACkC,EAAA,EAAD,CACI9B,KAAK,UACLmC,KAAK,WACLH,MAAM,2BACNC,SAAUC,KAAKtC,eAAgB,6BAC/B,yBAAK8B,UAAU,iBAAiBC,MAAO,CAACC,SAAS,WAAYQ,MAAM,OAAQC,IAAI,IAAKC,MAAM,QAASC,OAAO,UACrGL,KAAK3C,MAAMI,SAGhB,kBAAC6C,EAAA,EAAD,CACAC,QAAO,sBAAE,4BAAAjC,EAAA,sEACeO,IAAMC,KAAK,mCAAoC,CAC/D0B,GAAK,sBACLC,GAAK,CAAC,eAAM,SAAK,UACjBC,GAAK,CACDC,IAAM,0CACNC,IAAM,6CANT,OACC7C,EADD,OASLS,QAAQC,IAAIV,GATP,4CADT,OAWe,8BAIvB,kBAAC8C,EAAA,EAAD,KACI,kBAACP,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKlB,MAAMyB,kBAAlC,gBACA,kBAACR,EAAA,EAAD,CAAQL,KAAK,SAASc,MAAM,WAA5B,mC,GAtFDC,IAAMC,WCkIdC,E,2MAhIX7D,MAAQ,CACJ8D,YAAY,EACZC,gBAAiB,aACjBC,YAAa,aACb9D,QAAS,GACTC,QAAS,I,EAGbE,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCuD,Y,uCAAc,WAAO3D,GAAP,mBAAAW,EAAA,6DACVX,EAAEY,iBADQ,UAGAgD,EAAO,IAAI5C,UACZC,OAAO,UAAW,EAAKvB,MAAME,SAClCgE,EAAK3C,OAAO,UAAW,EAAKvB,MAAMG,SAL5B,SAMiBqB,IAAMC,KAAK,qCAAsCyC,GANlE,mBAMExC,EANF,EAMEA,KACRP,QAAQC,IAAIM,IAEQ,IAAjBA,EAAKyC,QATF,wBAUF,EAAK5D,SAAS,CACVyD,YAAa,WACT,OACI,kBAACrD,EAAA,EAAD,CAAQC,MAAI,GACR,6BACI,kBAACgB,EAAA,EAAD,CAAOC,SAAS,SACZ,kBAACC,EAAA,EAAD,cADJ,uEAGY,kBAACmB,EAAA,EAAD,CAAQb,MAAO,CAAEgC,UAAW,QAAUlB,QAAS,WACnD,EAAK3C,SAAS,CAAEyD,YAAa,iBADzB,sBAlB9B,kCA6BN,EAAKhC,MAAMqC,eA7BL,qDAiCNlD,QAAQe,MAAR,MAjCM,4CAmCC,GAnCD,gE,8HAuCJ,IAAD,OACCoC,EAAWC,YAAOtB,IAAPsB,CAAe,CAC5BC,gBAAiB,UACjBC,YAAa,OACbf,MAAO,UAELgB,GAC2B,IAA1B,EAAK1E,MAAM8D,WACH,kBAAC,EAAD,CACH7B,kBACI,WACI,EAAK1B,SAAS,CAAGuD,YAAY,EACzBC,gBAAiB,WACb,OACI,kBAACpD,EAAA,EAAD,CAAQC,MAAI,GACR,6BACI,kBAACgB,EAAA,EAAD,CAAOC,SAAS,WACZ,kBAACC,EAAA,EAAD,gBADJ,6EAGI,kBAACmB,EAAA,EAAD,CAAQb,MAAO,CAACgC,UAAU,QAASlB,QAAS,WACpC,EAAK3C,SAAS,CAAEwD,gBAAiB,iBADzC,uBAWpCN,cACI,WAAK,EAAKlD,SAAS,CAACuD,YAAa,OAGlC,KAEX,OACI,yBAAKa,GAAG,cACHD,EACD,0BAAME,OAAO,aAAa5D,SAAU2B,KAAKsB,aACrC,yBAAK9B,UAAU,QACX,uBAAG0C,KAAK,OAAO3B,QAAS,SAAC5C,GACrBA,EAAEY,iBACF,EAAKc,MAAMqC,iBAEX,yBAAKS,IAAI,iBAAiBC,IAAI,2FAGrCpC,KAAK3C,MAAM+D,kBACXpB,KAAK3C,MAAMgE,cACZ,yBAAK7B,UAAU,cACX,yBAAKA,UAAU,cACX,kBAACI,EAAA,EAAD,CAAW9B,KAAK,UACZ+B,WAAS,EACTC,MAAM,qBACNC,SAAUC,KAAKtC,eACnB,6BACA,kBAACkC,EAAA,EAAD,CACI9B,KAAK,UACLmC,KAAK,WACLH,MAAM,2BACNC,SAAUC,KAAKtC,eACnB,8BAEJ,yBAAK8B,UAAU,gBACX,kBAACmC,EAAD,CAAUpB,QAAS,kBAAM,EAAK3C,SAAS,CAACuD,YAAa,MAArD,4BACA,kBAACQ,EAAD,CAAU1B,KAAK,UAAf,8B,GAxHRe,IAAMC,W,0CCJpBoB,E,YACF,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KACDhC,MAAQ,CACTiF,UAAW,8BACXC,SAAU,qBACVC,OAAQ,gBALG,E,sEAQT,IAAD,OACL,OACI,kBAACxE,EAAA,EAAD,CAAQC,MAAI,EAACwB,MAAO,CAAEoC,gBAAiB,2BACnC,yBAAKrC,UAAU,UACX,yBAAKA,UAAU,gBACX,yBAAK2C,IAAI,WAAWC,IAAKpC,KAAK3C,MAAMiF,aAExC,yBAAK9C,UAAU,eACX,yBAAKA,UAAU,oBACX,kBAACI,EAAA,EAAD,CAAW6C,UAAQ,EAAC3C,MAAM,eAAK4C,aAAc1C,KAAK3C,MAAMkF,WACxD,kBAAC3C,EAAA,EAAD,CAAW6C,UAAQ,EAAC3C,MAAM,qBAAM4C,aAAc1C,KAAK3C,MAAMmF,SACzD,kBAAC5C,EAAA,EAAD,CAAW+C,UAAQ,EAAC7C,MAAM,6BAC1B,kBAACF,EAAA,EAAD,CAAW+C,UAAQ,EAAC7C,MAAM,2CAE9B,yBAAKN,UAAU,uBACP,kBAACoD,EAAD,CAAc7B,MAAM,aAApB,yCACA,kBAAC6B,EAAD,qBACA,kBAACA,EAAD,CAAcrC,QAAS,kBAAI,EAAKlB,MAAMwD,aAAtC,wB,GA1BP7B,IAAMC,WAmCzB2B,EAAehB,YAAOtB,IAAPsB,CAAe,CAChCxB,MAAO,OACPC,OAAQ,OACRyC,SAAW,SAGAT,I,oDClBTU,E,YACF,WAAY1D,GAAQ,IAAD,8BACf,4CAAMA,KAwCV2D,iBAAmB,WACf,OAA4C,IAAxC,EAAK3F,MAAM4F,eAAeC,UACnB,EAAKtF,SAAS,CACjBqF,eAAe,eACR,EAAK5F,MAAM4F,eADJ,CAEVC,WAAW,MAIhB,EAAKtF,SAAS,CACjBqF,eAAe,eACR,EAAK5F,MAAM4F,eADJ,CAEVC,WAAW,OArDJ,EA0DnBC,kBAAoB,WAChB,OAA6C,IAAzC,EAAK9F,MAAM4F,eAAeG,WACnB,EAAKxF,SAAS,CACjBqF,eAAe,eACR,EAAK5F,MAAM4F,eADJ,CAEVG,YAAY,MAIjB,EAAKxF,SAAS,CACjBqF,eAAe,eACR,EAAK5F,MAAM4F,eADJ,CAEVG,YAAY,OApEpB,EAAK/F,MAAQ,CACTgG,WAAW,EACXC,aAAa,EACbC,eAAgB,CACZf,OAAQ,OACRD,SAAU,qBACVD,UAAW,6BAEfW,eAAgB,CACZC,WAAW,EACXE,YAAY,EACZI,UAAW,CACP,CACIC,UAAW,SACXC,WAAY,4BACZC,UAAW,gBAEf,CACIF,UAAW,SACXC,WAAY,4BACZC,UAAW,sBAEf,CACIF,UAAW,SACXC,WAAY,4BACZC,UAAW,iBAGnBC,WAAY,CACR,CACIC,WAAY,SACZC,YAAa,4BACbC,WAAY,yBAlCb,E,sEA2ET,IAAD,OACCC,EAAa,WACf,IAA4C,IAAxC,EAAK3G,MAAM4F,eAAeC,UAAoB,CAC9C,IAAMe,EAAS,EAAK5G,MAAM4F,eAAeO,UAAUU,KAC/C,SAACnG,GAAY,OACb,wBAAIoG,IAAKpG,EAAM0F,WACX,kBAACW,EAAD,KACI,yBAAKhC,IAAKrE,EAAM2F,aACf3F,EAAM4F,eAInB,OACI,yBAAKnE,UAAU,eACX,kBAAC4E,EAAD,CAAa7D,QAAS,EAAKyC,kBAA3B,sBACA,6BAAK,4BAAKiB,KAItB,OAAO,kBAACG,EAAD,CAAa7D,QAAS,EAAKyC,kBAA3B,sBAlBQ,GAoBbY,EAAc,WAChB,IAA6C,IAAzC,EAAKvG,MAAM4F,eAAeG,WAAqB,CAC/C,IAAMiB,EAAU,EAAKhH,MAAM4F,eAAeW,WAAWM,KACjD,SAACnG,GAAY,OACb,wBAAIoG,IAAKpG,EAAM8F,YACX,kBAACO,EAAD,KACI,yBAAKhC,IAAKrE,EAAM+F,cACf/F,EAAMgG,gBAInB,OACI,yBAAKvE,UAAU,eACX,kBAAC4E,EAAD,CAAa7D,QAAS,EAAK4C,mBAA3B,sBACA,6BAAK,4BAAKkB,KAItB,OAAO,kBAACD,EAAD,CAAa7D,QAAS,EAAK4C,mBAA3B,sBAlBS,GA0BAnD,KAAKX,MAAjBiF,QACR,OACI,gCACI,yBAAKtC,GAAG,eACJ,yBAAKxC,UAAU,cACX,kBAAC+E,EAAD,CAAYhE,QAAS,kBAAM,EAAK3C,SAAS,CAAEyF,WAAW,MAAS,kBAAC,IAAD,CAAU5D,MAAO,CAAEqD,SAAU,WAC5F,kBAAC0B,EAAA,EAAD,CACIvG,KAAM+B,KAAK3C,MAAMgG,UACjBoB,QAAS,kBAAM,EAAK7G,SAAS,CAAEyF,WAAW,KAC1CqB,OAAO,QACP,yBAAKlF,UAAU,aACX,yBAAKA,UAAU,eACXe,QAAS,kBAAM/B,QAAQC,IAAI,WACvB,yBAAK0D,IAAI,WAAWC,IAAKpC,KAAK3C,MAAMkG,eAAejB,YACvD,8BAAOtC,KAAK3C,MAAMkG,eAAehB,UACjC,kBAACgC,EAAD,CAAYhE,QAAS,kBAAM,EAAK3C,SAAS,CAAE0F,aAAa,MAAS,kBAAC,IAAD,QApB1D,IAA3B,EAAKjG,MAAMiG,YACJ,kBAAC,EAAD,CAAYT,SAAU,kBAAM,EAAKjF,SAAS,CAAE0F,aAAa,OAE7D,MAoBa,yBAAK9D,UAAU,gBACVwE,EACAJ,MAKjB,yBAAKpE,UAAU,cACX,uBAAG0C,KAAK,gBAAe,yBAAKC,IAAI,OAAOC,IAAI,gCAE/C,yBAAK5C,UAAU,cACX,uBAAG0C,KAAK,gBAAe,yBAAKC,IAAI,QAAQC,IAAI,iCAGpD,yBAAKJ,GAAG,gBACJ,yBAAKxC,UAAU,eACX,kBAACmF,EAAA,EAAD,CACIC,YAAY,kBAKpB,yBAAKpF,UAAU,gBACX,uBAAG0C,KAAK,gBAAR,kB,GApKHlB,IAAMC,WA6KrBsD,EAAa3C,YAAOtB,IAAPsB,CAAe,CAC9BiD,SAAU,OACVxE,OAAQ,SAGN+D,EAAcxC,YAAOtB,IAAPsB,CAAe,CAC/BxB,MAAO,QACPC,OAAQ,OACRyE,OAAQ,mBAKG/B,ICrHAgC,E,iLA/FP,OACI,8BACI,yBAAK/C,GAAG,iBACJ,yBAAKxC,UAAU,cACX,yBAAKA,UAAU,qBAIf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBAGf,yBAAKA,UAAU,gBAAf,uBAIJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBAAf,+CAGA,yBAAKA,UAAU,gBAAf,6BAGA,yBAAKA,UAAU,mBAAf,8DAGA,yBAAKA,UAAU,iBAAf,gCAMZ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,sBAAf,OAGA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,mBAAf,KAGA,yBAAKA,UAAU,gBAAf,OAIJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gBAAf,sBAGA,yBAAKA,UAAU,mBAAf,MAGA,yBAAKA,UAAU,iBAAf,SAMZ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,oBAAf,sBAIA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,mBAAf,KAGA,yBAAKA,UAAU,gBAAf,OAIJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sBAAf,gBAGA,yBAAKA,UAAU,0BAAf,gBAGA,yBAAKA,UAAU,mBAAf,mCAGA,yBAAKA,UAAU,iBAAf,qC,GArFbwB,IAAMC,WCqBV+D,G,wLAlBP,OACI,yBAAKxF,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,2B,GAbbwB,IAAMC,YCoCbgE,E,YA/BX,WAAY5F,GAAO,IAAD,8BACd,4CAAMA,KACDhC,MAAQ,CACT6H,SAAW,EAAK7F,MAAM6F,SACtBC,WAAY,EACZpG,KAAO,IALG,E,mNAWOF,IAAMuG,IAAI,iC,gBAAxBrG,E,EAAAA,KACPP,QAAQC,IAAIM,GACZiB,KAAKpC,SAAS,CAACmB,OAAMoG,WAAY,I,qIAIjC,OAA4B,IAAzBnF,KAAK3C,MAAM8H,UAEN,kBAAC,EAAD,MAIJ,yBAAKnD,GAAG,aACJ,kBAAC,EAAD,CAAQjD,KAAMiB,KAAK3C,MAAM0B,OACzB,kBAAC,EAAD,CAAMA,KAAMiB,KAAK3C,MAAM0B,Y,GA1BrBiC,IAAMC,WCkBTgE,E,2MApBb5H,MAAQ,CACNgI,SAAW,EACXC,KAAO,CACL,WACE,OACI,kBAAC,EAAD,CAAW5D,aAAc,kBAAM,EAAK9D,SAAS,CAAEyH,SAAU,QAGjE,WAAK,OAAO,kBAACE,EAAD,S,wEAIZ,OACE,yBAAKvD,GAAG,WACLhC,KAAK3C,MAAMiI,KAAKtF,KAAK3C,MAAMgI,iB,GAflBrE,IAAMC,WCQJuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e7ca494e.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport axios from 'axios';\n\nclass Register extends React.Component {\n    state = {\n        user_nm : \"\",\n        user_id: \"\",\n        user_pw: \"\",\n        alert : ()=>{},\n    }\n    changeHandel = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Dialog open fullWidth>\n                <DialogTitle>회원가입</DialogTitle>\n                <form method=\"POST\" onSubmit={async (e) => {\n                    e.preventDefault();\n                    console.log(this.state);\n                    try{\n                        const form = new FormData();\n                        form.append('user_nm', this.state.user_nm);\n                        form.append('user_id', this.state.user_id);\n                        form.append('user_pw', this.state.user_pw);\n                        const { data } = await axios.post(\"http://localhost:8888/joinRequest\", form);\n                        if(data.isPossibleId === false){\n                            this.setState({alert : () => {\n                                return (<Alert severity=\"error\">\n                                <AlertTitle>Error</AlertTitle>\n                                이미 존재하는 아이디입니다.\n                            </Alert>)\n                            }})\n                            return;\n                        }\n                        if(data.isJoin === false){\n                            this.setState({alert : () => {\n                                return (<Alert severity=\"error\">\n                                <AlertTitle>Error</AlertTitle>\n                                회원가입에 실패하였습니다. 다시 한번 시도해주세요.\n                            </Alert>)\n                            }})\n                            return;\n                        }\n                        \n                        this.props.onSuccessRegister();\n                    }catch(error){\n                        console.error(error);\n                    }\n                }}>\n                    <div className=\"register-text\" style={{position:'relative', paddingLeft:\"100px\"}}>\n                        <TextField\n                            name=\"user_nm\"\n                            autoFocus\n                            label=\"이름\"\n                            onChange={this.changeHandel} /><br />\n                        <TextField\n                            name=\"user_id\"\n                            label=\"아이디\"\n                            onChange={this.changeHandel} /><br />\n                        <TextField\n                            name=\"user_pw\"\n                            type=\"password\"\n                            label=\"비밀번호\"\n                            onChange={this.changeHandel} /><br />\n                            <div className=\"register-alert\" style={{position:'absolute', right:'40px', top:'0', width:'250px', height:'200px'}}>\n                                {this.state.alert()}\n                            </div>\n                            {/* 지워하야 하는 부분 */}\n                            <Button\n                            onClick={async ()=>{\n                                const value = await axios.post(\"http://localhost:8888/testresult\", { \n                                    aa : \"abcdgg 안녕\",\n                                    bb : ['하나', '둘', '셋'],\n                                    cc : {\n                                        cc1 : '씨씨 안 객체 원',\n                                        cc2 : \"씨씨 안 객체 투\"\n                                    }\n                                });\n                                console.log(value);\n                            }}>abc</Button><br />\n                            {/* 지워하야 하는 부분 */}\n                            \n                    </div>\n                    <DialogActions>\n                        <Button onClick={() => this.props.onClickCancel()} >취소</Button>\n                        <Button type=\"submit\" color=\"primary\">회원가입</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport './LoginPage.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport Register from './Register';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n    state = {\n        isRegister: false,\n        successRegister: ()=>{},\n        failedLogin: ()=>{},\n        user_id: \"\",\n        user_pw: \"\",\n    }\n\n    changeHandel = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    loginHandel = async (e) => {\n        e.preventDefault();\n        try {\n            const Form = new FormData();\n            Form.append('user_id', this.state.user_id);\n            Form.append('user_pw', this.state.user_pw);\n            const { data } = await axios.post(\"http://localhost:8888/loginRequest\", Form);\n            console.log(data);\n            \n            if(data.isLogin === false){\n                this.setState({\n                    failedLogin: () => {\n                        return (\n                            <Dialog open>\n                                <div>\n                                    <Alert severity=\"error\">\n                                        <AlertTitle>Error</AlertTitle>\n                                        로그인에 실패하였습니다.\n                                                <Button style={{ marginTop: '10px' }} onClick={() => {\n                                            this.setState({ failedLogin: () => { } });\n                                        }}>닫기</Button>\n                                    </Alert>\n                                </div>\n                            </Dialog>\n                        )\n                    }\n                })\n                return;\n            }\n            this.props.onChangePage();\n            return;\n            \n        } catch (error) {\n            console.error(error);\n        } finally {\n            return false;\n        }\n    }\n\n    render() {\n        const MyButton = styled(Button)({\n            backgroundColor: '#bdc3c7',\n            marginRight: '10px',\n            color: 'black',\n        });\n        const registerPage = (()=>{\n            if(this.state.isRegister === true){\n                return <Register\n                    onSuccessRegister={\n                        () => {\n                            this.setState({  isRegister: false,\n                                successRegister: () => {\n                                    return (\n                                        <Dialog open>\n                                            <div>\n                                                <Alert severity=\"success\">\n                                                    <AlertTitle>Success</AlertTitle>\n                                                    회원가입을 성공하였습니다.\n                                                    <Button style={{marginTop:'10px'}} onClick={() => {\n                                                            this.setState({ successRegister: () => { } });\n                                                        }}>닫기</Button>\n                                                </Alert>\n                                            </div>\n                                        </Dialog>\n                                    )\n                                }\n                            })\n                        }\n                }\n                onClickCancel={\n                    ()=>{this.setState({isRegister : false})}\n                }></Register>;\n            }\n            return null;\n        })();\n        return (\n            <div id=\"index-page\">\n                {registerPage}\n                <form action=\"go_to_main\" onSubmit={this.loginHandel}>\n                    <div className=\"icon\">\n                        <a href=\"main\" onClick={(e) => {\n                            e.preventDefault();\n                            this.props.onChangePage();\n                        }}>\n                            <img alt=\"Recordary icon\" src=\"https://www.google.co.kr/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" />\n                        </a>\n                    </div>\n                    {this.state.successRegister()}\n                    {this.state.failedLogin()}\n                    <div className=\"login-form\">\n                        <div className=\"login-text\">\n                            <TextField name=\"user_id\"\n                                autoFocus\n                                label=\"아이디\"\n                                onChange={this.changeHandel} />\n                            <br />\n                            <TextField\n                                name=\"user_pw\"\n                                type=\"password\"\n                                label=\"비밀번호\"\n                                onChange={this.changeHandel} />\n                            <br />\n                        </div>\n                        <div className=\"login-button\">\n                            <MyButton onClick={() => this.setState({isRegister : true})}>회원가입</MyButton>\n                            <MyButton type=\"submit\">로그인</MyButton>\n                        </div>\n                    </div>\n                </form >\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport './UserEditor.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core';\n\nclass UserEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userImage: \"http://placehold.it/250x250\",\n            userName: '홍길동',\n            userId: 'hong-gildong',\n        }\n    }\n    render() {\n        return (\n            <Dialog open style={{ backgroundColor: 'RGB(255, 223, 75, 0.5)' }}>\n                <div className=\"editor\">\n                    <div className='editor-image'>\n                        <img alt=\"user img\" src={this.state.userImage} />\n                    </div>\n                    <div className=\"editor-info\">\n                        <div className=\"editor-info-text\">\n                            <TextField disabled label=\"이름\" defaultValue={this.state.userName} />\n                            <TextField disabled label=\"아이디\" defaultValue={this.state.userId} />\n                            <TextField required label=\"패스워드\" />\n                            <TextField required label=\"패스워드 확인\" />\n                        </div>\n                        <div className=\"editor-info-buttons\">\n                                <EditorButton color=\"secondary\">회원정보 삭제</EditorButton>\n                                <EditorButton>수정</EditorButton>\n                                <EditorButton onClick={()=>this.props.onCancel()}>취소</EditorButton>\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nconst EditorButton = styled(Button)({\n    width: '80px',\n    height: '50px',\n    fontSize : '12px'\n});\n\nexport default UserEditor;","import React from 'react';\nimport './header.css';\nimport UserEditor from './UserEditor';\nimport { styled } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Build';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//App Bar with search field\n//https://material-ui.com/components/app-bar/\n// const styles = theme => ({\n//     inputInput: {\n//         padding: theme.spacing(1, 1, 1, 7),\n//         transition: theme.transitions.create('width'),\n//         width: '100%',\n//         [theme.breakpoints.up('sm')]: {\n//             width: 120,\n//             '&:focus': {\n//                 width: 200,\n//             },\n//         },\n//     },\n// });\n\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuClick: false,\n            editorClick: false,\n            userComponents: {\n                userId: 'abcd',\n                userName: '위성호',\n                userImage: 'http://placehold.it/30x30'\n            },\n            menuComponents: {\n                groupOpen: false,\n                friendOpen: false,\n                groupList: [\n                    {\n                        gruopCode: '100249',\n                        groupImage: 'http://placehold.it/30x30',\n                        groupName: '참조',\n                    },\n                    {\n                        gruopCode: '100250',\n                        groupImage: 'http://placehold.it/30x30',\n                        groupName: '팔색조',\n                    },\n                    {\n                        gruopCode: '100251',\n                        groupImage: 'http://placehold.it/30x30',\n                        groupName: '조조',\n                    },\n                ],\n                friendList: [\n                    {\n                        friendCode: '100001',\n                        friendImage: 'http://placehold.it/30x30',\n                        friendName: \"위승빈\"\n                    }\n                ],\n            }\n        }\n    }\n\n    setGroupMenuOpen = () => {\n        if (this.state.menuComponents.groupOpen === true) {\n            return this.setState({\n                menuComponents: {\n                    ...this.state.menuComponents,\n                    groupOpen: false\n                }\n            });\n        }\n        return this.setState({\n            menuComponents: {\n                ...this.state.menuComponents,\n                groupOpen: true\n            }\n        });\n    };\n\n    setFriendMenuOpen = () => {\n        if (this.state.menuComponents.friendOpen === true) {\n            return this.setState({\n                menuComponents: {\n                    ...this.state.menuComponents,\n                    friendOpen: false\n                }\n            });\n        }\n        return this.setState({\n            menuComponents: {\n                ...this.state.menuComponents,\n                friendOpen: true\n            }\n        });\n    };\n\n    render() {\n        const GroupList = (() => {\n            if (this.state.menuComponents.groupOpen === true) {\n                const gruops = this.state.menuComponents.groupList.map(\n                    (value) => { return (\n                    <li key={value.gruopCode}>\n                        <GroupButton>\n                            <img src={value.groupImage} />\n                            {value.groupName}\n                        </GroupButton>\n                        </li>) }\n                );\n                return (\n                    <div className=\"gruop-field\">\n                        <GroupButton onClick={this.setGroupMenuOpen}>그룹▲</GroupButton>\n                        <div><ul>{gruops}</ul></div>\n                    </div>\n                );\n            }\n            return <GroupButton onClick={this.setGroupMenuOpen}>그룹▼</GroupButton>;\n        })();\n        const friendList = (() => {\n            if (this.state.menuComponents.friendOpen === true) {\n                const friends = this.state.menuComponents.friendList.map(\n                    (value) => { return (\n                    <li key={value.friendCode}>\n                        <GroupButton>\n                            <img src={value.friendImage} />\n                            {value.friendName}\n                        </GroupButton>\n                        </li>) }\n                );\n                return (\n                    <div className=\"gruop-field\">\n                        <GroupButton onClick={this.setFriendMenuOpen}>친구▲</GroupButton>\n                        <div><ul>{friends}</ul></div>\n                    </div>\n                );\n            }\n            return <GroupButton onClick={this.setFriendMenuOpen}>친구▼</GroupButton>;\n        })();\n        const Editor = () => {\n            if (this.state.editorClick === true) {\n                return <UserEditor onCancel={() => this.setState({ editorClick: false })} />;\n            }\n            return null;\n        }\n        const { classes } = this.props;\n        return (\n            <header>\n                <div id=\"header-left\">\n                    <div className=\"title-menu\">\n                        <IconButton onClick={() => this.setState({ menuClick: true })}><MenuIcon style={{ fontSize: '26px' }} /></IconButton>\n                        <Drawer\n                            open={this.state.menuClick}\n                            onClose={() => this.setState({ menuClick: false })}\n                            anchor='left'>\n                            <div className=\"menu-wrap\">\n                                <div className=\"menu-profile\"\n                                    onClick={() => console.log('click')}>\n                                        <img alt=\"user img\" src={this.state.userComponents.userImage} />\n                                    <span>{this.state.userComponents.userName}</span>\n                                    <IconButton onClick={() => this.setState({ editorClick: true })}><EditIcon /></IconButton>\n                                    {Editor()}\n                                </div>\n                                <div className=\"menu-buttons\">\n                                    {GroupList}\n                                    {friendList}\n                                </div>\n                            </div>\n                        </Drawer>\n                    </div>\n                    <div className=\"title-icon\">\n                        <a href=\"profile.html\"><img alt=\"icon\" src=\"http://placehold.it/30x30\" /></a>\n                    </div>\n                    <div className=\"title-name\">\n                        <a href=\"profile.html\"><img alt=\"title\" src=\"http://placehold.it/30x30\" /></a>\n                    </div>\n                </div>\n                <div id=\"header-right\">\n                    <div className=\"search-user\">\n                        <InputBase\n                            placeholder=\"Search…\"\n                            // className={classes.inputInput}\n                            // inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className=\"profile-icon\">\n                        <a href=\"profile.html\">profile</a>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\n\nconst IconButton = styled(Button)({\n    minWidth: '40px',\n    height: '40px',\n});\n\nconst GroupButton = styled(Button)({\n    width: '300px',\n    height: '80px',\n    border: '1px solid gray',\n});\n\n// export default withStyles(styles)(Header);\n\nexport default Header;","import React from 'react';\n\nclass Main extends React.Component {\n    render() {\n        return (\n            <main>\n                <div id=\"timeline-list\">\n                    <div className=\"timeline-1\">\n                        <div className=\"timeline-picture\">\n                            {/* <img src=\"1579501322063.jpg\" /> */}\n                        </div>\n\n                        <div className=\"timeline-info\">\n                            <div className=\"timeline-profile\">\n                                <div className=\"profile-picture\">\n                                    {/* <img src=\"profile-image.png\" /> */}\n                                </div>\n                                <div className=\"profile-name\">\n                                    위승빈\n                        </div>\n                            </div>\n                            <div className=\"timeline-comment\">\n                                <div className=\"status-message\">\n                                    안녕하세요 ㅠㅠ\n                        </div>\n                                <div className=\"comment-list\">\n                                    댓글 목록\n                        </div>\n                                <div className=\"comment-buttons\">\n                                    좋아요, 팔로우, 팔로잉\n                        </div>\n                                <div className=\"comment-input\">\n                                    댓글 입력\n                        </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"timeline-2\">\n                        <div className=\"timeline2-schedual\">\n                            ssa\n                </div>\n                        <div className=\"timeline-info\">\n                            <div className=\"timeline-profile\">\n                                <div className=\"profile-picture\">\n                                    a\n                        </div>\n                                <div className=\"profile-name\">\n                                    aa\n                        </div>\n                            </div>\n                            <div className=\"timeline-comment\">\n                                <div className=\"comment-list\">\n                                    리스트\n                        </div>\n                                <div className=\"comment-buttons\">\n                                    ss\n                        </div>\n                                <div className=\"comment-input\">\n                                    ss\n                        </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"timeline-3\">\n                        <div className=\"timeline-picture\">\n                            이미지\n                </div>\n\n                        <div className=\"timeline-info\">\n                            <div className=\"timeline-profile\">\n                                <div className=\"profile-picture\">\n                                    a\n                        </div>\n                                <div className=\"profile-name\">\n                                    aa\n                        </div>\n                            </div>\n                            <div className=\"timeline-comment\">\n                                <div className=\"timeline3-schedual\">\n                                    일정\n                        </div>\n                                <div className=\"timeline3-comment-list\">\n                                    댓글\n                        </div>\n                                <div className=\"comment-buttons\">\n                                    버튼 좋아요\n                        </div>\n                                <div className=\"comment-input\">\n                                    댓글추가\n                        </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './Loading.css'\n\nclass Loading extends React.Component {\n    render() {\n        return (\n            <div className=\"loading\">\n                <div className=\"sk-cube-grid\">\n                    <div className=\"sk-cube sk-cube1\"></div>\n                    <div className=\"sk-cube sk-cube2\"></div>\n                    <div className=\"sk-cube sk-cube3\"></div>\n                    <div className=\"sk-cube sk-cube4\"></div>\n                    <div className=\"sk-cube sk-cube5\"></div>\n                    <div className=\"sk-cube sk-cube6\"></div>\n                    <div className=\"sk-cube sk-cube7\"></div>\n                    <div className=\"sk-cube sk-cube8\"></div>\n                    <div className=\"sk-cube sk-cube9\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import React from 'react';\nimport './mainPage.css';\nimport Header from '../Header/Header';\nimport Main from './Main';\nimport axios from 'axios';\nimport Loading from '../Loading/Loading';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userCode : this.props.userCode,\n            isLoading : true,\n            data : {},\n        }\n    }\n\n    async componentDidMount(){\n        // 유저에 대한 정보를 가져오고 그 결과값을 state 에 저장\n        const {data} = await axios.get(\"http://localhost:8888/profile\");\n        console.log(data);\n        this.setState({data, isLoading : false});\n    }\n\n    render() {\n        if(this.state.isLoading === true){\n            return (\n                <Loading></Loading>\n            )\n        }\n        return (\n            <div id=\"main-page\">\n                <Header data={this.state.data}></Header>\n                <Main data={this.state.data}></Main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport './default.css';\nimport LoginPage from './Login/LoginPage';\nimport MainPage from './Main/MainPage';\nclass App extends React.Component {\n  state = {\n    currPage : 0,\n    page : [\n      () => {\n        return (\n            <LoginPage onChangePage={() => this.setState({ currPage: 1 })}>\n            </LoginPage>\n        )},\n    ()=>{return <MainPage></MainPage>}\n    ]\n  }\n  render() {\n    return (\n      <div id=\"wrapper\">\n        {this.state.page[this.state.currPage]()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}