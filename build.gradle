plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.3.1"
}

group = 'com.fairy_pitt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
//    compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

// ---- React build Task

apply plugin: "com.moowork.node"

def webappDir = "$projectDir/frontend"

//task deleteBuild(type: Delete) {
//    delete 'build/resources/main/static'
//    delete 'build/resources/main/templates'
//}

task appNpmInstall(type: NpmTask) {
    workingDir = file("${webappDir}")
    args = ["run", "build"] }
task copyStaticApp(type: Copy) {
    from 'frontend/build'
    into "build/resources/main/static"}
task copyHtmlApp(type: Copy) {
    from 'build/resources/main/static/index.html'
    into "build/resources/main/templates"}

copyStaticApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyStaticApp)
compileJava.dependsOn(copyHtmlApp)
//compileJava.dependsOn(deleteBuild)

// ---- React build Task