buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
        mooworkVersion = '1.2.0'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${mooworkVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

group 'com.fairy_pitt'
version '1.0-SNAPSHOT'

mainClassName = 'com.fairy_pitt.recordary'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2:1.4.199')
    implementation('org.springframework.session:spring-session-jdbc')
    implementation('org.springframework.boot:spring-boot-devtools')
    implementation('org.json:json:20180813')
    implementation('joda-time:joda-time:2.2')

    annotationProcessor ('org.projectlombok:lombok')

    testImplementation('junit:junit')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.projectlombok:lombok')
    testImplementation('org.hamcrest:hamcrest:2.1')

    testAnnotationProcessor ('org.projectlombok:lombok')
}

def webappDir = "$projectDir/frontend"

node {
    version = '12.16.1'
    download=true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir=file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    workingDir = file("${webappDir}")
    args = ['run-script', 'build']
}

task yarnBuild(type: YarnTask) {
    workingDir = file("${webappDir}")
    args = ['build']
}

task copyWebApp(type: Copy) {
    from 'frontend/build'
    into 'build/resources/main/static/.'
}

task copyHtmlApp(type: Copy) {
    from 'build/resources/main/static/index.html'
    into 'build/resources/main/templates/.'
}

yarnBuild.dependsOn appNpmInstall
yarnBuild.dependsOn yarnBuild
compileJava.dependsOn copyWebApp
compileJava.dependsOn copyHtmlApp